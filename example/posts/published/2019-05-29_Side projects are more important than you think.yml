title: Side projects are more important than you think
date: 2019-05-29
author: Terrillo Walls
summary: Did you know that Twitter started as a side project? Side projects come in many configurations and have lots of varying purposes.
body: |-
  Did you know that Twitter started as a side project? Side projects come in many configurations and have lots of varying purposes. Some people begin them to create a nice product to ultimately build a successful company, but there are many other reasons why working on side projects can be exceptionally important.

  Over the course of 10 year career programming I’ve created 100s of side project. My Hover account has +50 domain names from past side projects.
  Side projects this year:
  - https://leentree.com/
  - https://www.producthunt.com/posts/bedrocc

  Side projects last year:
  - https://www.producthunt.com/posts/ulna-photos
  - https://www.producthunt.com/posts/wordprobe

  Side projects accelerate your learning
  In the field of technology, you can spend a lot of time maintaining the old infrastructure instead of working with new and shiny.

  In my own experience, I found working on side projects in my spare time not only enjoyable but really helpful in expanding my coding skills. I’ve learned JAVA, Swift, Objective-C, NodeJS, Python, Golang, PHP, and Machine Learning classifiers all from side projects.

  Every time I read something interesting on a blog, facing a challenge at work, or learned something new from a colleague I wanted to implement it in one of my side projects as well.

  And every time I improved my skills, I wanted to rewrite active projects to use a better or clearer code. The new things learned are later interjected in the job environment all the time. All my big ideas are a scale-up of side projects.

  The freedom to experiment
  This freedom sometimes may lead to unproductive, glitchy and half working “products”, but it can also result in something creative, inspiring and innovative. And that is when the beauty of a side project will shine. It’s not common to have time in a cooperate environment to experiment. You paid to work and not learn on the job.

  How to start?
  Start with a problem and a potential solution. Not all ideas are realistic, but that isn’t the point. My new side project is an attempt to build JARVIS from IronMan. Not practical with my current skills but defiantly possible.

  We all have great idea’s moving through our consciousness, but most of the time we don’t act upon them. Something to keep in mind when you start a new project:

  Start with that MVP
  I like to start with the hard problem first. Create an isolated MVP project using that technology. For example, my first app was a simple text area that saved even when the app was closed. During that process, I learned the basic workflow of building an app in Swift.

  Next, break the rest of that idea into smaller segments until one of them looks easy to achieve. Create that part and repeat the process until you possess all of the parts you need to solve the original problem. During this phase, I like to move very fast while messy. Quickly you’ll know where you need to stop and learn something brand-new.

  Always be refactoring
  Building an app? When you feel like you’re making good progress or made a revaluation during the process. Stop and refactor the whole project. This step allows the new learning to stick and keeps your project manageable. Your project should have minimal complexity, minimal coding, and be focused on the main purpose it serves. You can always add new stuff later, but when you are just beginning you should lessen features to the minimum.

  — —

  Thanks for reading! I hope the information was valuable. I’ve grown relativity quick in my career. People always ask how. 100s of side projects is the answer.
